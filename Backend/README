# Screenmatch - Guia para Configuração e Execução

## 1. Configurar o Banco de Dados

No arquivo `application.properties`, configure a conexão com seu banco MySQL/Postgree/Outros:

```properties
spring.datasource.url=jdbc:mysql://localhost:3306/seu_banco?useSSL=false&serverTimezone=UTC //Mude aqui.
spring.datasource.username=${DB_USER} //Você pode criar o banco por fora e colocar o nome aqui
spring.datasource.password=${DB_PASS} 
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8081
spring.jpa.format-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect // talvez aqui também


2. Inserir Séries e Episódios no Banco
Você pode adicionar dados diretamente no banco ou usar a aplicação sem interface web.

Para usar a versão sem web:

Comente a classe ScreenmatchApplication.

Descomente a classe ScreenmatchApplicationSemWeb abaixo:


//package br.com.alura.screenmatch;

//import br.com.alura.screenmatch.principal.Principal;
//import br.com.alura.screenmatch.repository.EpisodioRepository;
//import br.com.alura.screenmatch.repository.SerieRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.boot.CommandLineRunner;
//import org.springframework.boot.SpringApplication;
//import org.springframework.boot.autoconfigure.SpringBootApplication;

//@SpringBootApplication
//public class ScreenmatchApplicationSemWeb implements CommandLineRunner {

//    @Autowired
//    private SerieRepository repositorio;
//
//    @Autowired
//    private EpisodioRepository episodioRepository;
//
//    public static void main(String[] args) {
//        SpringApplication.run(ScreenmatchApplicationSemWeb.class, args);
//    }

//    @Override
//    public void run(String... args) throws Exception {
//        Principal principal = new Principal(repositorio, episodioRepository);
//        principal.exibeMenu();
//    }
  }

Após iniciar, use:
Comando 1 para adicionar séries
Comando 2 para adicionar episódios

3. Configurar CORS para Frontend (Live Server)
Crie a classe abaixo para configurar CORS e permitir acesso do front-end:

package br.com.alura.screenmatch.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class CorsConfiguration implements WebMvcConfigurer {

    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping("/**")
                .allowedOrigins("http://127.0.0.1:5500") // ajuste a porta se necessário
                .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS", "HEAD", "TRACE", "CONNECT");
    }
}
